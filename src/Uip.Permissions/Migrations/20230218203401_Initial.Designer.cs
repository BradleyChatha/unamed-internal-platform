// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uip.Permissions.Implementations.Database.Model;
using Uip.Permissions.Interfaces;

#nullable disable

namespace Uip.Permissions.Migrations
{
    [DbContext(typeof(PermissionsDbContext))]
    [Migration("20230218203401_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Uip.Permissions.Implementations.Database.Model.ActionPolicyDocumentDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<IList<ActionPolicyStatementDto>>("Statements")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ActionPolicyDocuments");
                });

            modelBuilder.Entity("Uip.Permissions.Implementations.Database.Model.RoleActionPolicyDocumentMappingDb", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ActionPolicyDocumentId")
                        .HasColumnType("uuid");

                    b.HasKey("RoleId", "ActionPolicyDocumentId");

                    b.HasIndex("ActionPolicyDocumentId");

                    b.ToTable("RoleActionPolicyDocuments");
                });

            modelBuilder.Entity("Uip.Permissions.Implementations.Database.Model.RoleDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Uip.Permissions.Implementations.Database.Model.UserRoleMappingDb", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Uip.Permissions.Implementations.Database.Model.RoleActionPolicyDocumentMappingDb", b =>
                {
                    b.HasOne("Uip.Permissions.Implementations.Database.Model.ActionPolicyDocumentDb", "ActionPolicyDocument")
                        .WithMany()
                        .HasForeignKey("ActionPolicyDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uip.Permissions.Implementations.Database.Model.RoleDb", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionPolicyDocument");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Uip.Permissions.Implementations.Database.Model.UserRoleMappingDb", b =>
                {
                    b.HasOne("Uip.Permissions.Implementations.Database.Model.RoleDb", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
